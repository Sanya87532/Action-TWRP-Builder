name: Recovery Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'Manifest URL (HTTPS recommended)'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp'
      MANIFEST_BRANCH:
        description: 'Manifest branch'
        required: true
        default: 'twrp-12.1'
      DEVICE_TREE_URL:
        description: 'Device tree URL (HTTPS)'
        required: true
        default: 'https://github.com/TeamWin/android_device_asus_I003D'
      DEVICE_TREE_BRANCH:
        description: 'Device tree branch'
        required: true
        default: 'android-12.1'
      DEVICE_PATH:
        description: 'Device path'
        required: true
        default: 'device/asus/I003D'
      COMMON_TREE_URL:
        description: 'Common tree URL (leave blank if none)'
        required: false
      COMMON_PATH:
        description: 'Common path (leave blank if none)'
        required: false
      DEVICE_NAME:
        description: 'Device codename'
        required: true
        default: 'I003D'
      MAKEFILE_NAME:
        description: 'Makefile name'
        required: true
        default: 'twrp_I003D'
      BUILD_TARGET:
        description: 'Build target'
        required: true
        default: 'recovery'

jobs:
  build:
    runs-on: self-hosted
    env:
      USE_CCACHE: 0
      MAKEFLAGS: -j4
      BUILD_WITH_COLORS: true
    steps:
      - name: Display Run Parameters
        run: |
          echo "::group::User Environment Variables"
          echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
          echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
          echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
          echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
          echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
          echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
          echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
          echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
          echo "::endgroup::"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cleanup disk space
        run: |
          echo "🧹 Cleaning up disk space..."
          sudo apt-get clean || true
          df -h

      - name: Prepare the environment
        run: |
          echo "⚙️ Installing build dependencies..."
          sudo apt-get update -y
          sudo apt-get install -y \
            git curl wget unzip zip python3 python3-pip python3-setuptools \
            bc bison build-essential ccache flex g++-multilib gcc-multilib \
            lib32ncurses-dev lib32z1-dev libncurses5-dev libncursesw5-dev \
            libssl-dev libelf-dev x11proto-core-dev libx11-dev tree \
            libgl1-mesa-dev libxml2-utils xsltproc libc6-dev liblz4-tool \
            libsdl1.2-dev libgtk-3-dev libglu1-mesa-dev freeglut3-dev \
            lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev \
            lzma ncftp qemu-user-static libstdc++-10-dev libncurses6 tar \
            linux-modules-extra-$(uname -r) python3-venv || true
          python3 -m ensurepip --upgrade
          python3 -m pip install --upgrade pip

      - name: Install OpenJDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install repo tool
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo

      - name: Initialize repo
        run: |
          mkdir workspace
          cd workspace
          git config --global user.name "AutoBuilder"
          git config --global user.email "autobuild@users.noreply.github.com"
          repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
        id: workspace

      - name: Repo Sync
        run: |
          cd workspace
          repo sync -j4 --force-sync
          df -h

      - name: Clone device tree
        run: |
          cd workspace
          git clone --depth 1 ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ${{ github.event.inputs.DEVICE_PATH }}

      - name: Clone common tree
        if: ${{ github.event.inputs.COMMON_TREE_URL && github.event.inputs.COMMON_PATH }}
        run: |
          cd workspace
          git clone --depth 1 ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ${{ github.event.inputs.COMMON_PATH }}

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Build TWRP
        run: |
          cd workspace
          source build/envsetup.sh
          export ALLOW_MISSING_DEPENDENCIES=true
          lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng
          mka clean
          mka ${{ github.event.inputs.BUILD_TARGET }}image

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TWRP-${{ github.event.inputs.DEVICE_NAME }}
          path: workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img
