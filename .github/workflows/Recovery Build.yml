name: Recovery Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'Manifest URL'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp'
      MANIFEST_BRANCH:
        description: 'Manifest Branch'
        required: true
        default: 'twrp-12.1'
      DEVICE_TREE_URL:
        description: 'Device tree URL'
        required: true
        default: 'https://github.com/TeamWin/android_device_asus_rothko'
      DEVICE_TREE_BRANCH:
        description: 'Device tree branch'
        required: true
        default: 'android-12.1'
      DEVICE_PATH:
        description: 'Device path'
        required: true
        default: 'device/asus/rothko'
      DEVICE_NAME:
        description: 'Device name'
        required: true
        default: 'rothko'
      MAKEFILE_NAME:
        description: 'Makefile name'
        required: true
        default: 'twrp_rothko'
      BUILD_TARGET:
        description: 'Build target'
        required: true
        default: 'recovery'

jobs:
  build:
    runs-on: self-hosted
    env:
      USE_CCACHE: 0
      MAKEFLAGS: -j4
      BUILD_WITH_COLORS: true
    steps:
    - name: Display Run Parameters
      run: |
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"

    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        fetch-depth: 1

    - name: Prepare environment
      run: |
        sudo apt update && sudo apt install -y \
          git curl wget unzip zip bc bison build-essential ccache flex \
          g++-multilib gcc-multilib lib32ncurses-dev lib32z1-dev \
          libncurses5-dev libncursesw5-dev libssl-dev libelf-dev \
          x11proto-core-dev libx11-dev tree libgl1-mesa-dev libxml2-utils \
          xsltproc libc6-dev liblz4-tool libsdl1.2-dev libgtk-3-dev \
          libglu1-mesa-dev freeglut3-dev lzop pngcrush schedtool \
          squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static \
          libstdc++-10-dev libncurses6 tar python3 python3-pip
        # fix python for TWRP build
        sudo ln -sf /usr/bin/python3 /usr/bin/python
        ccache --version
        mkdir -p ~/bin
        export PATH=~/bin:$PATH

    - name: Install repo
      run: |
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        git config --global user.name "AutoBuilder"
        git config --global user.email "autobuild@users.noreply.github.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: workspace

    - name: Repo Sync
      run: |
        cd workspace
        repo sync -j4 --force-sync

    - name: Clone device tree
      run: |
        cd workspace
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ${{ github.event.inputs.DEVICE_PATH }}

    - name: Build TWRP
      run: |
        cd workspace
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng
        mka clean
        mka ${{ github.event.inputs.BUILD_TARGET }}image

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TWRP-${{ github.event.inputs.DEVICE_NAME }}
        path: workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img
