name: Recovery Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'twrp-12.1'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/TeamWin/android_device_asus_I003D'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'android-12.1'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/asus/I003D'
      COMMON_TREE_URL:
        description: 'COMMON_TREE_URL (if no common tree, leave blank)'
        required: false
      COMMON_PATH:
        description: 'COMMON_PATH (if no common tree, leave blank)'
        required: false
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'I003D'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'twrp_I003D'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'recovery'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: self-hosted
    permissions:
      contents: write
    env:
      USE_CCACHE: 0
      MAKEFLAGS: -j4
      BUILD_WITH_COLORS: true
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
        echo "::endgroup::"

    - name: Check Out
      uses: actions/checkout@v4

    - name: Cleanup disk space
      run: |
        echo "🧹 Cleaning up disk space before build..."

        # Принудительно убиваем все процессы apt и удаляем lock-файлы
        sudo killall apt apt-get || true
        sudo rm -rf /var/lib/apt/lists/lock /var/cache/apt/archives/lock /var/lib/dpkg/lock*
        sudo dpkg --configure -a || true

        # Удаляем временные каталоги
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/hostedtoolcache
        sudo apt-get clean || true
        df -h
        echo "✅ Disk cleaned."

    - name: Prepare the environment
      run: |
        echo "⚙️ Installing build dependencies..."
        sudo DEBIAN_FRONTEND=noninteractive apt-get update -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get upgrade -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            git curl wget unzip zip python3 python3-pip python3-distutils python3-setuptools \
            bc bison build-essential ccache flex g++-multilib gcc-multilib \
            g++-10-multilib gcc-10-multilib lib32ncurses-dev lib32z1-dev \
            libncurses5-dev libncursesw5-dev libssl-dev libelf-dev x11proto-core-dev \
            libx11-dev tree libgl1-mesa-dev libxml2-utils xsltproc libc6-dev \
            liblz4-tool libsdl1.2-dev libgtk-3-dev libglu1-mesa-dev freeglut3-dev \
            lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma \
            ncftp qemu-user-static libstdc++-10-dev libncurses6 tar \
            linux-modules-extra-$(uname -r)
        ccache --version
        mkdir -p ~/bin
        export PATH=~/bin:$PATH

    - name: Install OpenJDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Setup SSH Keys
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') || 
          startsWith(github.event.inputs.DEVICE_TREE_URL, 'git@github.com') ||
          startsWith(github.event.inputs.COMMON_TREE_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install repo
      run: |
        mkdir -p ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "AutoBuilder"
        git config --global user.email "autobuild@users.noreply.github.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd

    - name: Repo Sync
      run: |
        repo sync -j4 --force-sync
        df -h
      working-directory: workspace

    - name: Clone device tree
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Clone common tree
      if: |
        github.event.inputs.COMMON_TREE_URL != null
        && github.event.inputs.COMMON_PATH != null
      run: |
        git clone ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Sync Device Dependencies
      run: |
        bash ${GITHUB_WORKSPACE}/scripts/convert.sh ${{ github.event.inputs.DEVICE_PATH }}/twrp.dependencies || true
        repo sync -j4 || true
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      continue-on-error: true

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Build TWRP
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng
        mka clean
        mka ${{ github.event.inputs.BUILD_TARGET }}image
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Target: ${{ github.event.inputs.BUILD_TARGET }}.img
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
